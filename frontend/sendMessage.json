{
  "name": "sendMessage",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "send-message",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        0,
        0
      ],
      "id": "36fb21be-ea61-48c6-9303-2c314b2f0bf9",
      "name": "Webhook",
      "webhookId": "8ab09b31-a556-4f6f-97f2-73da08a7c449"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "1a6edc53-8be8-41c4-b348-aa9914d13968",
              "name": "chat_id",
              "value": "={{$json[\"body\"][\"input\"][\"chat_id\"]}}",
              "type": "string"
            },
            {
              "id": "d0d33ca4-4b18-4667-9e80-a80bbc734398",
              "name": "content",
              "value": "={{$json[\"body\"][\"input\"][\"content\"]}}",
              "type": "string"
            },
            {
              "id": "d1b3543a-669d-4a16-9b4a-e17dbdc72ccd",
              "name": "user_id",
              "value": "={{$json[\"body\"][\"session_variables\"][\"x-hasura-user-id\"]}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        208,
        0
      ],
      "id": "1168fbb1-abdc-4c4c-b1ec-b1ba8ac91144",
      "name": "Set: inputs"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://ctvvnpalxppmbnqswokp.hasura.ap-south-1.nhost.run/v1/graphql",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "x-hasura-admin-secret",
              "value": "j(Pr%(w^fGcwAYXiMuRFomZzl;b:gfnH"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"query\": \"query Verify($chat_id: uuid!, $user_id: uuid!) { chats_aggregate(where: { id: { _eq: $chat_id }, user_id: { _eq: $user_id } }) { aggregate { count } } }\",\n  \"variables\": {\n    \"chat_id\": \"{{$json[\"chat_id\"]}}\",\n    \"user_id\": \"{{$json[\"user_id\"]}}\"\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        416,
        0
      ],
      "id": "c8160f86-5344-4c0e-a019-2eb58ba65f25",
      "name": "GraphQL: verify owner"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "00659678-3df3-4bf5-b9c0-caf064a0b55f",
              "leftValue": "={{$json[\"data\"][\"chats_aggregate\"][\"aggregate\"][\"count\"]}}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        624,
        0
      ],
      "id": "b8b9c635-0d5d-49eb-b36b-650670b87c65",
      "name": "IF: is owner?"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "{\n  \"success\": false,\n  \"message\": \"Unauthorized: user does not own this chat\",\n  \"data\": null\n}\n",
        "options": {
          "responseCode": 200
        }
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        1040,
        96
      ],
      "id": "9ed6e801-d082-4297-be67-ef04f9f15481",
      "name": "Respond: 403"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://openrouter.ai/api/v1/chat/completions",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "Bearer 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"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"model\": \"openrouter/auto\",\n  \"messages\": [\n    {\n      \"role\": \"system\",\n      \"content\": \"You are Subspace's helpful chatbot.\"\n    },\n    {\n      \"role\": \"user\",\n      \"content\": \"{{ $json[\"content\"] || $node[\"Set: inputs\"].json[\"content\"] }}\"\n    }\n  ],\n  \"max_tokens\": 500\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1040,
        -96
      ],
      "id": "398361cc-7f0f-4ecb-bc3e-83ad6f72fa27",
      "name": "OpenRouter: chat completion"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://ctvvnpalxppmbnqswokp.hasura.ap-south-1.nhost.run/v1/graphql",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "x-hasura-admin-secret",
              "value": "j(Pr%(w^fGcwAYXiMuRFomZzl;b:gfnH"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "query",
              "value": "mutation InsertBot($chat_id: uuid!, $content: String!) {   insert_messages_one(object: { chat_id: $chat_id, sender: \"bot\", content: $content }) {     id     chat_id     sender     content     created_at   } }"
            },
            {
              "name": "variables",
              "value": "={{\n(function () {\n  const c = ($json.choices && $json.choices[0]) ? $json.choices[0] : {};\n  const assistant =\n    (c.message && typeof c.message.content === 'string') ? c.message.content\n    : (typeof c.text === 'string') ? c.text\n    : '';\n\n  const chatId = $json.chat_id ?? $node[\"Set: inputs\"].json.chat_id;\n\n  return {\n    chat_id: chatId,\n    content: assistant,\n  };\n})()\n}}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1248,
        -96
      ],
      "id": "727d049d-e0f4-407b-960c-a1f8e59e5b76",
      "name": "GraphQL: insert bot message"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a4c3419f-9fe6-492f-bc5a-02b94edb2092",
              "name": "id",
              "value": "={{$json[\"data\"][\"insert_messages_one\"][\"id\"]}}",
              "type": "string"
            },
            {
              "id": "0acd54e2-73f4-4035-a197-23697978cb9a",
              "name": "chat_id",
              "value": "={{$json[\"data\"][\"insert_messages_one\"][\"chat_id\"]}}",
              "type": "string"
            },
            {
              "id": "60d4d7ed-1067-4a86-9b18-fbb4885f216d",
              "name": "sender",
              "value": "={{$json[\"data\"][\"insert_messages_one\"][\"sender\"]}}",
              "type": "string"
            },
            {
              "id": "2ad50462-5bf1-4c8f-a2a9-694b3d0551d2",
              "name": "content",
              "value": "={{$json[\"data\"][\"insert_messages_one\"][\"content\"]}}",
              "type": "string"
            },
            {
              "id": "fd401ebb-a74b-4735-8ac0-28bfd09f93b9",
              "name": "created_at",
              "value": "={{$json[\"data\"][\"insert_messages_one\"][\"created_at\"]}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1456,
        -96
      ],
      "id": "e5bbd067-9739-4cae-9794-26df425fd787",
      "name": "Set: action response"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "{\n  \"success\": true,\n  \"message\": \"Message sent successfully\",\n  \"data\": {\n    \"id\": \"={{ $json.id }}\",\n    \"content\": \"={{ $json.content }}\",\n    \"sender\": \"={{ $json.sender }}\",\n    \"created_at\": \"={{ $json.created_at }}\"\n  }\n}\n",
        "options": {
          "responseCode": 200
        }
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        1664,
        -96
      ],
      "id": "3355749f-745d-4f9b-a19d-7748eba8efe1",
      "name": "Respond: 200"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://ctvvnpalxppmbnqswokp.hasura.ap-south-1.nhost.run/v1/graphql",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "x-hasura-admin-secret",
              "value": "j(Pr%(w^fGcwAYXiMuRFomZzl;b:gfnH"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "query",
              "value": "mutation InsertUser($chat_id: uuid!, $content: String!) {   insert_messages_one(object: { chat_id: $chat_id, sender: \"user\", content: $content }) {     id     chat_id     sender     content     created_at   } }"
            },
            {
              "name": "variables",
              "value": "={{   (function () {     const chatId = $json.chat_id ?? $node[\"Set: inputs\"].json.chat_id;     const content = $json.content ?? $node[\"Set: inputs\"].json.content;     return { chat_id: chatId, content: content };   })() }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        832,
        -96
      ],
      "id": "29b9f9bb-6fbc-4c55-9bdf-e6a23e501102",
      "name": "HTTP Request"
    }
  ],
  "pinData": {},
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Set: inputs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set: inputs": {
      "main": [
        [
          {
            "node": "GraphQL: verify owner",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GraphQL: verify owner": {
      "main": [
        [
          {
            "node": "IF: is owner?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF: is owner?": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Respond: 403",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter: chat completion": {
      "main": [
        [
          {
            "node": "GraphQL: insert bot message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GraphQL: insert bot message": {
      "main": [
        [
          {
            "node": "Set: action response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set: action response": {
      "main": [
        [
          {
            "node": "Respond: 200",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "OpenRouter: chat completion",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "04104cf0-e34f-43c9-961c-ad3305de9ba0",
  "meta": {
    "instanceId": "b9e4f6a57970b2515a4b8e19fe868a52ce76de874eb6de93eb4176eb94aa4325"
  },
  "id": "u3V6OVpU3cj8gCqF",
  "tags": []
}